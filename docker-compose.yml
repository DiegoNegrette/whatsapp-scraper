version: "3.6"

networks:
    default:
        driver: bridge

services:
    # This container has to be exclude from production configurations.
    # its main purpose is to allow you to access containers running in the host machine
    # from inside of docker.
    docker-host:
        image: qoomon/docker-host
        cap_add: ["NET_ADMIN", "NET_RAW"]
        # mem_limit: 8M
        restart: on-failure
        networks:
            - default

    rabbitmq:
        restart: always
        image: rabbitmq:3-management-alpine
        ports:
            - 5672:5672
            - 15672:15672
        expose:
            - 15672
        networks:
            - default
        volumes:
            - ./local/rabbitmq:/etc/rabbitmq/
            - ./.docker/rabbitmq/data/:/var/lib/rabbitmq/mnesia
            - ./.docker/rabbitmq/logs/:/var/log/rabbitmq/

    django:
        restart: on-failure
        image: django-whatsapp-scraper
        env_file:
            - .env
        build:
            context: ./
        networks:
            - default
        ports:
            - ${DJANGO_PORT}:8000
        volumes:
            - ./:/code
        command: >
            bash -c ' pipenv install --system --skip-lock && python manage.py runserver 0.0.0.0:8000'
        environment:
            - DJANGO_SETTINGS_MODULE=service.settings

    celery-worker:
        restart: on-failure
        image: django-whatsapp-scraper
        env_file:
            - .env
        volumes:
            - ./:/code
        command: >
            bash -c ' pipenv install --system --skip-lock && sleep 14 && watchmedo auto-restart --directory=./ --pattern=*.py --recursive -- celery -A service worker --concurrency 4 -O fair -Q main_queue --beat --scheduler django -l INFO'
        depends_on:
            - rabbitmq
        networks:
            - default

    chrome:
        restart: always
        image: selenium/node-chrome:4.23.1-20240813
        shm_size: 2gb
        depends_on:
            - selenium-hub
        environment:
            - SE_EVENT_BUS_HOST=selenium-hub
            - SE_EVENT_BUS_PUBLISH_PORT=4442
            - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
            - HUB_HOST=selenium-hub
            - HUB_PORT=4444
            - NODE_MAX_INSTANCES=${NUMBER_OF_WEBDRIVER_PER_NODE}
            - NODE_MAX_SESSION=${NUMBER_OF_WEBDRIVER_PER_NODE}
            - START_XVFB=true
            - VNC_NO_PASSWORD=1
            - JAVA_OPTS=-Dwebdriver.chrome.whitelistedIps= -Dselenium.LOGGER.level=WARNING
            - CONTAINER_HOST_IP
            - SCREEN_WIDTH=1366
            - SCREEN_HEIGHT=768
        ports:
            - "${WEBDRIVER_PORT}:5900"
        volumes:
            - ./seluser-data-dir:/home/seluser
        stdin_open: true
        tty: true
        networks:
            - default

    selenium-hub:
        restart: always
        image: selenium/hub:4.23.1-20240813
        ports:
            - "4444:4444"
        environment:
            - GRID_TIMEOUT=${GRID_TIMEOUT}
            - GRID_BROWSER_TIMEOUT=${GRID_TIMEOUT}
            - GRID_MAX_SESSION=${GRID_MAX_SESSION}
            - JAVA_OPTS=-Dwebdriver.chrome.whitelistedIps=
        stdin_open: true
        tty: true
        networks:
            - default

    db:
        image: postgres:16.2
        env_file:
            - .env
        environment:
            - PGDATA=/var/lib/postgresql/data/whatsapp-scraper/
            - POSTGRES_DB=${DATABASE}
            - POSTGRES_USER=${USERNAME}
            - POSTGRES_PASSWORD=${PASSWORD}
        ports:
            - "5432:5432"
        volumes:
            - postgres:/var/lib/postgresql/data

    pgadmin:
        image: dpage/pgadmin4
        container_name: pgadmin4_container
        restart: always
        ports:
            - "8888:80"
        env_file:
            - .env
        environment:
            - PGADMIN_DEFAULT_EMAIL:${PGADMIN_DEFAULT_EMAIL}
            - PGADMIN_DEFAULT_PASSWORD:${PGADMIN_DEFAULT_PASSWORD}
        volumes:
            - pgadmin-data:/var/lib/pgadmin

    flower:
        restart: on-failure
        image: django-whatsapp-scraper
        depends_on:
            - rabbitmq
        env_file:
            - .env
        volumes:
            - ./:/code
        command: >
            bash -c '
            pipenv install --system --skip-lock &&
            sleep 14 &&
            celery -A service flower --port=5555'
        ports:
            - "5555:5555"

volumes:
    postgres:
    pgadmin-data:
